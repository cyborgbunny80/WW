{"ast":null,"code":"// Save data to localStorage\nexport const saveToLocalStorage=(key,value)=>{try{const serialized=JSON.stringify(value);localStorage.setItem(key,serialized);}catch(error){console.error(\"Error saving \".concat(key,\" to localStorage:\"),error);}};// Load data from localStorage\nexport const loadFromLocalStorage=(key,defaultValue)=>{try{const item=localStorage.getItem(key);return item?JSON.parse(item):defaultValue;}catch(error){console.error(\"Error loading \".concat(key,\" from localStorage:\"),error);return defaultValue;}};// Clear all When? Win! data from localStorage\nexport const clearAllLocalStorage=()=>{try{localStorage.removeItem('whenwin_user');localStorage.removeItem('whenwin_location');localStorage.removeItem('whenwin_favorites');localStorage.removeItem('whenwin_events');}catch(error){console.error('Error clearing localStorage:',error);}};// Convert Set to Array for storage (localStorage can't store Sets)\nexport const setToArray=set=>Array.from(set);// Convert Array back to Set\nexport const arrayToSet=array=>new Set(array);","map":{"version":3,"names":["saveToLocalStorage","key","value","serialized","JSON","stringify","localStorage","setItem","error","console","concat","loadFromLocalStorage","defaultValue","item","getItem","parse","clearAllLocalStorage","removeItem","setToArray","set","Array","from","arrayToSet","array","Set"],"sources":["C:/Users/knwin/WhenWinApp10.25/src/utils/localStorage.js"],"sourcesContent":["// Save data to localStorage\r\nexport const saveToLocalStorage = (key, value) => {\r\n  try {\r\n    const serialized = JSON.stringify(value);\r\n    localStorage.setItem(key, serialized);\r\n  } catch (error) {\r\n    console.error(`Error saving ${key} to localStorage:`, error);\r\n  }\r\n};\r\n\r\n// Load data from localStorage\r\nexport const loadFromLocalStorage = (key, defaultValue) => {\r\n  try {\r\n    const item = localStorage.getItem(key);\r\n    return item ? JSON.parse(item) : defaultValue;\r\n  } catch (error) {\r\n    console.error(`Error loading ${key} from localStorage:`, error);\r\n    return defaultValue;\r\n  }\r\n};\r\n\r\n// Clear all When? Win! data from localStorage\r\nexport const clearAllLocalStorage = () => {\r\n  try {\r\n    localStorage.removeItem('whenwin_user');\r\n    localStorage.removeItem('whenwin_location');\r\n    localStorage.removeItem('whenwin_favorites');\r\n    localStorage.removeItem('whenwin_events');\r\n  } catch (error) {\r\n    console.error('Error clearing localStorage:', error);\r\n  }\r\n};\r\n\r\n// Convert Set to Array for storage (localStorage can't store Sets)\r\nexport const setToArray = (set) => Array.from(set);\r\n\r\n// Convert Array back to Set\r\nexport const arrayToSet = (array) => new Set(array);"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,kBAAkB,CAAGA,CAACC,GAAG,CAAEC,KAAK,GAAK,CAChD,GAAI,CACF,KAAM,CAAAC,UAAU,CAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CACxCI,YAAY,CAACC,OAAO,CAACN,GAAG,CAAEE,UAAU,CAAC,CACvC,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,iBAAAE,MAAA,CAAiBT,GAAG,sBAAqBO,KAAK,CAAC,CAC9D,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,oBAAoB,CAAGA,CAACV,GAAG,CAAEW,YAAY,GAAK,CACzD,GAAI,CACF,KAAM,CAAAC,IAAI,CAAGP,YAAY,CAACQ,OAAO,CAACb,GAAG,CAAC,CACtC,MAAO,CAAAY,IAAI,CAAGT,IAAI,CAACW,KAAK,CAACF,IAAI,CAAC,CAAGD,YAAY,CAC/C,CAAE,MAAOJ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,kBAAAE,MAAA,CAAkBT,GAAG,wBAAuBO,KAAK,CAAC,CAC/D,MAAO,CAAAI,YAAY,CACrB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,oBAAoB,CAAGA,CAAA,GAAM,CACxC,GAAI,CACFV,YAAY,CAACW,UAAU,CAAC,cAAc,CAAC,CACvCX,YAAY,CAACW,UAAU,CAAC,kBAAkB,CAAC,CAC3CX,YAAY,CAACW,UAAU,CAAC,mBAAmB,CAAC,CAC5CX,YAAY,CAACW,UAAU,CAAC,gBAAgB,CAAC,CAC3C,CAAE,MAAOT,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,UAAU,CAAIC,GAAG,EAAKC,KAAK,CAACC,IAAI,CAACF,GAAG,CAAC,CAElD;AACA,MAAO,MAAM,CAAAG,UAAU,CAAIC,KAAK,EAAK,GAAI,CAAAC,GAAG,CAACD,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}